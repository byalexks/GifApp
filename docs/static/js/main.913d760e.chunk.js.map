{"version":3,"sources":["componentes/AddCatergoria.js","componentes/helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","componentes/hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategoria","setCategoria","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cater","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","style","width","GifApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"4JA2CeA,EAxCM,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OAEI,sBAAMC,SAZY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OAEtCN,EAAc,MAMnB,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAML,GAAN,uBAAAM,EAAA,4DACP,mCACNC,EAFa,iDAEmCC,UAAUR,GAF7C,6BACP,oCADO,SAGKS,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAELC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACjC,OACI,qBAAKc,UAAU,cAAf,SACK,qBAAKA,UAAU,2DAA0DC,IAAKf,EAAKgB,IAAKN,OCDxFO,EAAU,SAAC,GAAa,IAAZxB,EAAW,EAAXA,MAAW,ECDR,SAACA,GAAW,IAAD,EAEVR,mBAAS,CAElCoB,KAAM,GACNa,SAAS,IAL0B,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAuBnC,OAdJC,qBAAW,WAEPvB,EAASL,GACJ6B,MAAK,SAAAd,GAEFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAKtB,CAACzB,IAEO0B,EDpBwBI,CAAa9B,GAAhCkB,EAFoB,EAEzBN,KAAaa,EAFY,EAEZA,QAGpB,OACI,qCACA,sBAAKJ,UAAU,UAAUU,MAAO,CAACC,MAAO,SAAxC,UACI,6BAAMhC,IACN,uBAECyB,GAAW,mBAAGJ,UAAU,oCAAb,wBAGLH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIC,WESfiB,EAxBA,WAAO,IAAD,EACezC,mBAAS,CAAC,WADzB,mBACZ0C,EADY,KACD3C,EADC,KAGnB,OACE,qCACA,wCACA,cAAC,EAAD,CACAA,aAAcA,IAEd,uBACA,oBAAI8B,UAAU,mBAAd,SAEIa,EAAUpB,KAAK,SAAAd,GAAK,OACjB,cAAC,EAAD,CAEAA,MAAOA,GADFA,YCdhBmC,IAASC,OACP,mCACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.913d760e.chunk.js","sourcesContent":["import React, {useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategoria = ({setCategoria}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e)=> {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit  = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n             setCategoria( cater =>[ inputValue,...cater  ] );\r\n            //  limpia el input\r\n             setinputValue(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n        <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange}\r\n        />\r\n\r\n        </form>\r\n        \r\n      )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n \r\nexport default AddCategoria;","export const getGifs = async(cater)=>{\r\n    const key = \"ZGlHbxjfafMqbuv1SsYZHgVy7eicsjRC\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(cater)}&limit=10&api_key=${key}`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\nconst gifs = data.map (img =>{\r\n    return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }\r\n})\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"d-flex m-2 \">\r\n             <img className=\"animate__animated  animate__bounce animate__delay-2s\t2s\" src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({cater}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(cater)\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"d-block\" style={{width: 100 + \"vw\"}}>\r\n            <h1 >{cater}</h1> \r\n            <hr />\r\n\r\n            {loading && <p className=\"animate__animated  animate__flash\">loading</p> }\r\n        </div>\r\n                {\r\n                   images.map(img => (\r\n                     <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                     />\r\n                   )) \r\n                } \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (cater) => {\r\n\r\n   const [state, setState] = useState({\r\n        \r\n    data: [],\r\n    loading: true\r\n\r\n   }) ;\r\n\r\nuseEffect( ()=> {\r\n\r\n    getGifs( cater)\r\n        .then(img => {\r\n\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n\r\n            })\r\n        })\r\n\r\n}, [cater])\r\n\r\n    return state;\r\n}\r\n","import React , {useState} from 'react';\nimport AddCategoria from './componentes/AddCatergoria'\nimport { GifGrid } from './componentes/GifGrid';\n  \n\nconst GifApp = () => {\n  const [categoria, setCategoria] = useState([\"Naruto\"]);\n\n  return ( \n    <>\n    <h1>GifApp</h1>\n    <AddCategoria\n    setCategoria={setCategoria}\n    />\n    <hr />\n    <ol className=\"d-flex flex-wrap\">\n      {\n        categoria.map( cater =>\n           <GifGrid\n           key={cater}\n           cater={cater}\n            />\n           )\n      }\n    </ol>\n    </>\n   );\n}\n \nexport default GifApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from './GifApp';\n\n\nReactDOM.render(\n  <>\n    <GifApp\n    />\n</>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}